{"version":3,"sources":["trivia.png","service/api.js","redux/actions/index.js","redux/reducers/player.js","redux/reducers/ranking.js","redux/reducers/index.js","redux/index.js","components/Input.js","pages/Login.js","components/Header.js","components/Timer.js","pages/Game.js","pages/Feedback.js","pages/Ranking.js","pages/Config.js","App.js","index.js"],"names":["module","exports","apiToken","fetch","response","json","result","dataUser","state","type","payload","scoreUp","INITIAL_STATE","name","assertions","score","gravatarEmail","timerResponse","ranking","token","reducer","combineReducers","player","action","email","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","Input","this","props","textLabel","id","value","dataTestid","handleChange","htmlFor","className","onChange","data-testid","Component","Login","isDisabled","valitadionButton","setState","target","saveLocalStorage","api","localStorage","setItem","submit","history","dispatch","newState","then","push","config","src","logo","alt","disabled","onClick","connect","withRouter","Header","hashEmail","md5","toString","width","Timer","counter","timerId","startTimer","setInterval","prev","setTimer","timerOff","clearInterval","checkTimer","isPaused","console","log","isNext","resetNext","setTimerStop","Game","timerStop","answerArrSort","questions","answers","count","isResponded","isDisabledQuestion","selectedAnswer","correctAnswerStyle","border","wrongAnswerStyle","decodeUtf8","s","decodeURI","shuffleArray","arr","i","length","j","Math","floor","random","responded","scoreboard","innerText","time","difficulty","correct_answer","easy","medium","hard","nextQuestion","saveRanking","getItem","JSON","parse","picture","stringify","applyStyle","answer","answerType","typeStyle","tokenUser","data","response_code","clear","results","map","question","incorrect_answers","index","dataTesting","category","key","event","Feedback","Ranking","sort","a","b","rank","Config","App","exact","path","component","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.e04163ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";","export default async function apiToken() {\n  const url = 'https://opentdb.com/api_token.php?command=request';\n  const response = await fetch(url);\n  const result = await response.json();\n  return result;\n}\n","import api from '../../service/api';\n\nexport const TOKEN_RESPONSE = 'TOKEN_RESPONSE';\nexport const DATA_USER = 'DATA_USER';\nexport const TIMER_RESPONSE = 'TIMER_RESPONSE';\nexport const SCORE_UP = 'SCORE_UP';\nexport const CLEAR_SCORE = 'CLEAR_SCORE';\n\nconst tokenResponse = (state) => ({\n  type: TOKEN_RESPONSE,\n  payload: state,\n});\n\nexport const clearScore = () => ({\n  type: CLEAR_SCORE,\n});\n\nexport const dataUser = (state) => ({\n  type: DATA_USER,\n  payload: state,\n});\n\nexport const timerResponse = (state) => ({\n  type: TIMER_RESPONSE,\n  payload: state,\n});\n\nexport const scoreUp = (state) => ({\n  type: SCORE_UP,\n  payload: state,\n});\n\nexport const fetchToken = () => async (dispatch) => {\n  const result = await api();\n  dispatch(tokenResponse(result));\n};\n\nexport default tokenResponse;\n","import { DATA_USER, TIMER_RESPONSE, SCORE_UP, CLEAR_SCORE } from '../actions/index';\n\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n  timerResponse: 0,\n};\n\nexport default function player(state = INITIAL_STATE, action) {\n  if (action.type === DATA_USER) {\n    return ({\n      ...state,\n      name: action.payload.name,\n      gravatarEmail: action.payload.email,\n    });\n  }\n  if (action.type === CLEAR_SCORE) {\n    return ({\n      ...state,\n      score: 0,\n      assertions: 0,\n    });\n  }\n  if (action.type === TIMER_RESPONSE) {\n    return ({\n      ...state,\n      timerResponse: action.payload.timerResponse,\n    });\n  }\n  if (action.type === SCORE_UP) {\n    return ({\n      ...state,\n      score: +(state.score) + +(action.payload.score),\n      assertions: +(state.assertions) + 1,\n    });\n  }\n  return state;\n}\n","import { TOKEN_RESPONSE } from '../actions/index';\n\nconst INITIAL_STATE = {\n  ranking: [],\n  token: '',\n};\n\nexport default function ranking(state = INITIAL_STATE, action) {\n  if (action.type === TOKEN_RESPONSE) {\n    return ({\n      ...state,\n      token: action.payload.token,\n    });\n  }\n  return state;\n}\n","import { combineReducers } from 'redux';\nimport player from './player';\nimport ranking from './ranking';\n\nconst reducer = combineReducers({ player, ranking });\n\nexport default reducer;\n","import { legacy_createStore as createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends Component {\n  render() {\n    const { textLabel, type, id, name, value, dataTestid, handleChange } = this.props;\n    return (\n      <label\n        htmlFor={ id }\n        className=\"flex flex-col text-purple-900 font-bold text-center\"\n      >\n        { textLabel }\n        <input\n          className=\"border border-1 border- rounded p-1\"\n          name={ name }\n          id={ id }\n          type={ type }\n          value={ value }\n          onChange={ handleChange }\n          data-testid={ dataTestid }\n        />\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  textLabel: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  dataTestid: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport Input from '../components/Input';\nimport { dataUser } from '../redux/actions';\nimport logo from '../trivia.png';\nimport '../App.css';\nimport api from '../service/api';\n\nclass Login extends Component {\n  state = {\n    name: '',\n    email: '',\n    isDisabled: true,\n  };\n\n  valitadionButton = () => {\n    const { name, email } = this.state;\n    if (!name || !email) {\n      return this.setState({ isDisabled: true });\n    }\n    return this.setState({ isDisabled: false });\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value }, this.valitadionButton());\n  };\n\n  saveLocalStorage = async () => {\n    const response = await api();\n    localStorage.setItem('token', response.token);\n  };\n\n  submit = () => {\n    const { history, dispatch } = this.props;\n    const newState = { ...this.state };\n    delete newState.isDisabled;\n    dispatch(dataUser(newState));\n    this.saveLocalStorage().then(() => history.push('/game'));\n  };\n\n  config = () => {\n    const { history } = this.props;\n    history.push('/config');\n  };\n\n  render() {\n    const { name, email, isDisabled } = this.state;\n    return (\n      <div className=\"flex flex-col justify-center items-center h-screen gap-16\">\n        <img className=\"App-logo max-w-md\" src={ logo } alt=\"trivia\" />\n        <div\n          className=\"flex flex-col justify-center items-center gap-7 bg-[#07DBAC]\n          px-10 py-7 rounded-lg\"\n        >\n          <Input\n            textLabel=\"Nome\"\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={ name }\n            handleChange={ this.handleChange }\n            dataTestid=\"input-player-name\"\n          />\n          <Input\n            textLabel=\"Email\"\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            value={ email }\n            handleChange={ this.handleChange }\n            dataTestid=\"input-gravatar-email\"\n          />\n          <button\n            className=\"p-2 w-full rounded-lg bg-violet-700 text-violet-200 font-bold\n            hover:bg-violet-600\"\n            data-testid=\"btn-play\"\n            type=\"button\"\n            disabled={ isDisabled }\n            onClick={ this.submit }\n          >\n            Play\n          </button>\n          <button\n            className=\"p-2 w-full rounded-lg bg-violet-700 text-violet-200 font-bold\n            hover:bg-violet-600\"\n            data-testid=\"btn-settings\"\n            type=\"button\"\n            onClick={ this.config }\n          >\n            Configurações\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(withRouter(Login));\n\n// referencia withRouter usado para crição do teste que tenham history.push() em sua construção: https://thewebdev.info/2022/03/08/how-to-fix-the-cannot-read-property-push-of-undefined-error-with-react-router/#:~:text=with%20React%20Router%3F-,To%20fix%20the%20%22Cannot%20read%20property%20'push'%20of%20undefined,props.\n","import md5 from 'crypto-js/md5';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n  // headerStyle = {\n  //   border: '1px solid black',\n  //   padding: '20px 25px',\n  //   display: 'flex',\n  //   justifyContent: 'space-between',\n  //   alignItems: 'center',\n  // };\n\n  hashEmail = (email) => md5(email).toString();\n\n  render() {\n    const { player } = this.props;\n\n    return (\n      <header\n        className=\"flex pr-10 justify-between items-center bg-[#3B254F]\"\n      >\n        <div\n          className=\"flex items-center\"\n        >\n          <img\n            src={ `https://www.gravatar.com/avatar/${this.hashEmail(player.gravatarEmail)}` }\n            width={ 70 }\n            alt=\"profile\"\n            data-testid=\"header-profile-picture\"\n          />\n          <span data-testid=\"header-player-name\">{ player.name }</span>\n        </div>\n        <div\n          className=\"text-violet-100\"\n        >\n          <span>Score: </span>\n          <span\n            data-testid=\"header-score\"\n          >\n            { player.score }\n          </span>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  player: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    assertions: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    gravatarEmail: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Timer extends Component {\n  state = {\n    counter: 0,\n    timerId: 0,\n  };\n\n  componentDidMount() {\n    this.startTimer();\n  }\n\n  componentDidUpdate() {\n    const { isPaused, isNext, resetNext, setTimerStop } = this.props;\n    const { timerId, counter } = this.state;\n    if (!isPaused) {\n      this.setTimer();\n    } else {\n      // dispatch(timerResponse({ timerResponse: counter }));\n      setTimerStop(counter);\n      clearInterval(timerId);\n    }\n    if (isNext) {\n      this.startTimer();\n      resetNext();\n    }\n  }\n\n  startTimer = () => {\n    this.setState({ counter: 30 });\n    const ONE_SECOND = 1000;\n    const timerId = setInterval(() => {\n      this.setState((prev) => ({ counter: prev.counter - 1 }));\n    }, ONE_SECOND);\n    this.setState({ timerId });\n  }\n\n  setTimer = () => {\n    const { counter, timerId } = this.state;\n    const { timerOff } = this.props;\n    if ((counter === 0 && timerId !== '')) {\n      clearInterval(timerId);\n      this.setState({ timerId: '' });\n      timerOff();\n    }\n  }\n\n  checkTimer = () => {\n    const { timerId } = this.state;\n    const { isPaused } = this.props;\n    console.log('timer', timerId);\n    return timerId === '' || isPaused ? '' : 'animate-ping';\n  }\n\n  render() {\n    const { counter } = this.state;\n    return (\n      <div\n        className=\"rounded-full border border-violet-500 h-[50px] w-[50px]\n        flex justify-center items-center p-5\"\n      >\n        <p\n          className={ `text-xl font-bold text-violet-200 ${this.checkTimer()}` }\n          data-testid=\"timer-header\"\n        >\n          { counter }\n        </p>\n      </div>\n    );\n  }\n}\n\nTimer.propTypes = {\n  timerOff: PropTypes.func.isRequired,\n  isPaused: PropTypes.bool.isRequired,\n  setTimerStop: PropTypes.func.isRequired,\n  isNext: PropTypes.bool.isRequired,\n  resetNext: PropTypes.func.isRequired,\n};\n\nexport default connect()(Timer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { scoreUp, clearScore } from '../redux/actions';\nimport Header from '../components/Header';\nimport Timer from '../components/Timer';\n\nclass Game extends Component {\n  state = {\n    timerStop: 0,\n    answerArrSort: [],\n    questions: [],\n    answers: '',\n    count: 0,\n    isResponded: false,\n    isDisabledQuestion: false,\n    isPaused: false,\n    isNext: false,\n    selectedAnswer: '',\n  }\n\n  correctAnswerStyle = {\n    border: '3px solid rgb(6, 240, 15)',\n  }\n\n  wrongAnswerStyle = {\n    border: '3px solid red',\n  }\n\n  componentDidMount() {\n    const { history, dispatch } = this.props;\n    dispatch(clearScore());\n    const RESPONDE_CODE_WRONG = 3;\n    const tokenUser = localStorage.getItem('token');\n    fetch(`https://opentdb.com/api.php?amount=5&token=${tokenUser}`)\n      .then((response) => response.json()).then((data) => {\n        if (data.response_code === RESPONDE_CODE_WRONG) {\n          localStorage.clear();\n          history.push('/');\n        } else {\n          this.setState({\n            questions: data.results,\n          });\n        }\n      }).then(() => {\n        const { questions } = this.state;\n        // Criação do banco de dados das questões com seus respectivos valores\n        const answerArrSort = questions.map((question) => {\n          const answers = question.incorrect_answers.map((answer, index) => (\n            {\n              answer,\n              answerType: 'wrong',\n              dataTesting: `wrong-answer-${index}`,\n            }\n          ));\n\n          answers.push({\n            answer: question.correct_answer,\n            answerType: 'correct',\n            dataTesting: 'correct-answer',\n          });\n          this.setState({ answers });\n          const answerArrSort2 = this.shuffleArray(answers);\n          return answerArrSort2;\n        });\n        this.setState({ answerArrSort });\n      });\n  }\n\n  decodeUtf8 = (s) => decodeURI(s);\n\n  // referencia de codigo:\n  // https://www.horadecodar.com.br/2021/05/10/como-embaralhar-um-array-em-javascript-shuffle/\n  // Função para randomizar array\n  shuffleArray = (arr) => {\n    // Loop em todos os elementos\n    for (let i = arr.length - 1; i > 0; i -= 1) {\n      // Escolhendo elemento aleatório\n      const j = Math.floor(Math.random() * (i + 1));\n      // Reposicionando elemento\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    // Retornando array com aleatoriedade\n    return arr;\n  }\n\n  responded = ({ target, target: { id } }) => {\n    this.setState({ isResponded: true, isDisabledQuestion: true, isPaused: true });\n    this.scoreboard(id);\n    this.setState({ selectedAnswer: target.innerText })\n  }\n\n  setTimerStop = (time) => {\n    this.setState({ timerStop: time });\n  }\n\n  scoreboard = (response) => {\n    const { count, questions, timerStop } = this.state;\n    const { dispatch } = this.props;\n    const difficultyValue = {\n      easy: 1,\n      medium: 2,\n      hard: 3,\n    };\n    const { difficulty } = questions[count];\n    const constScore = 10;\n    if (response === questions[count].correct_answer) {\n      const score = constScore + (timerStop * difficultyValue[difficulty]);\n      dispatch(scoreUp({ score }));\n    }\n  }\n\n  nextQuestion = () => {\n    const { count } = this.state;\n    const { history } = this.props;\n    const MAX_ARRAY = 4;\n    if (count < MAX_ARRAY) {\n      this.setState((prev) => ({\n        isResponded: false,\n        count: prev.count + 1,\n        isDisabledQuestion: false,\n        isPaused: false,\n        isNext: true,\n      }));\n    } else {\n      this.saveRanking();\n      history.push('/feedback');\n    }\n  }\n\n  saveRanking = () => {\n    const { score, name, gravatarEmail } = this.props;\n    let ranking = localStorage.getItem('ranking') || '[]';\n    ranking = JSON.parse(ranking);\n    ranking.push({ score, name, picture: gravatarEmail });\n    localStorage.setItem('ranking', JSON.stringify(ranking));\n  }\n\n  resetNext = () => {\n    this.setState({ isNext: false });\n  }\n\n  timerOff = () => {\n    this.setState({ isDisabledQuestion: true });\n    this.responded({ target: { value: 'erro' } });\n  }\n\n  applyStyle = ({ answer, answerType }) => {\n    const { isResponded, selectedAnswer } = this.state;\n    if (isResponded && selectedAnswer === answer) {\n      return `${this.typeStyle(answerType)} border border-4 border-violet-700 animate-pulse`;\n    }\n    if (isResponded) {\n      return this.typeStyle(answerType);\n    }\n  }\n\n  // typeStyle = (answerType) => {\n  //   if (answerType === 'correct') {\n  //     return this.correctAnswerStyle;\n  //   }\n  //   return this.wrongAnswerStyle;\n  // }\n  typeStyle = (answerType) => {\n    if (answerType === 'correct') {\n      return \"bg-green-500\";\n    }\n    return \"bg-red-600\";\n  }\n\n  render() {\n    const { questions, count, isPaused,\n      answers, isResponded, isNext,\n      isDisabledQuestion, answerArrSort } = this.state;\n    return (\n      <>\n        <Header />\n        <div className=\"py-10 flex flex-col justify-center items-center w-full\">\n          <Timer\n            setTimerStop={ this.setTimerStop }\n            timerOff={ this.timerOff }\n            isPaused={ isPaused }\n            isNext={ isNext }\n            resetNext={ this.resetNext }\n          />\n          <div className=\"mt-7 pt-7 rounded-lg bg-violet-100 max-w-3xl\">\n            {answers && (\n              <div\n                className=\"flex flex-col justify-center items-center\n                gap-5 text-center\"\n              >\n                <h3\n                  data-testid=\"question-category\"\n                  className=\"text-violet-900 font-bold\"\n                >\n                  {questions[count].category}\n                </h3>\n                <h2\n                  data-testid=\"question-text\"\n                  className=\"text-violet-900 px-10 text-lg\"\n                >\n                  {this.decodeUtf8(questions[count].question)}\n                </h2>\n                <section\n                  data-testid=\"answer-options\"\n                  className=\"flex flex-col justify-center items-center\"\n                >\n                  <div className=\"flex flex-wrap justify-center items-center m-auto w-9/12 gap-5 mb-5\">\n                    {\n                    answerArrSort[count]?.map((answer, index) => (\n                      <button\n                        className={`font-medium p-3 w-48 h-20 rounded-lg bg-[#07DBAC] ${this.applyStyle(answer)}`}\n                        type=\"button\"\n                        id={ answer.answer }\n                        key={ index }\n                        data-testid={ answer.dataTesting }\n                        disabled={ isDisabledQuestion }\n                        onClick={ (event) => this.responded(event) }\n                      >\n                        {answer.answer}\n                      </button>\n                    ))\n                    }\n                  </div>\n                </section>\n                {\n                  isResponded\n                && (\n                  <button\n                    className=\"w-full rounded-b-lg py-3 bg-[#07DBAC] text-lg font-medium\"\n                    type=\"button\"\n                    data-testid=\"btn-next\"\n                    onClick={ this.nextQuestion }\n                  >\n                    Next Question\n                  </button>\n                )\n                }\n              </div>\n            )}\n          </div>\n\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  timerResponse: state.player.timerResponse,\n  name: state.player.name,\n  gravatarEmail: state.player.gravatarEmail,\n  score: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Game);\n\nGame.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  dispatch: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import Header from '../components/Header';\n// import { clearScore } from '../redux/actions';\n\nclass Feedback extends Component {\n  state = {\n    assertions: 0,\n    score: 0,\n  }\n\n  componentDidMount() {\n    const { assertions, score } = this.props;\n    this.setState({ assertions, score });\n    // dispatch(clearScore());\n  }\n\n  render() {\n    const { history } = this.props;\n    const { assertions, score } = this.state;\n    const MIN_ASSERTIONS = 3;\n    return (\n      <div className=\"flex flex-col justify-center h-screen\">\n        {/* <Header /> */}\n        <div\n          className=\"self-center flex flex-col justify-center items-center\n          bg-[#07DBAC] max-w-2xl px-20 pt-14 pb-12 rounded-lg gap-10 shadow-lg\"\n        >\n          {\n            assertions < MIN_ASSERTIONS\n              ? (\n                <h1\n                  data-testid=\"feedback-text\"\n                  className=\"text-5xl font-semibold italic\"\n                >\n                  Could be better...\n                </h1>)\n              : (\n                <h1\n                  data-testid=\"feedback-text\"\n                  className=\"text-5xl font-semibold italic\"\n                >\n                  Well Done!\n                </h1>)\n          }\n          <div className=\"flex flex-col gap-5 items-center\">\n            <span className=\"flex gap-2 text-3xl\">\n              Score:\n              <p data-testid=\"feedback-total-score\">{ score }</p>\n            </span>\n            <span className=\"flex gap-2 text-lg\">\n              Correct Answers:\n              <p data-testid=\"feedback-total-question\">{ assertions }</p>\n            </span>\n          </div>\n          <button\n          // Requisito 16\n            className=\"p-2 w-full rounded-lg bg-violet-700 text-violet-200 font-bold\n            hover:bg-violet-600\"\n            type=\"button\"\n            onClick={ () => history.push('/ranking') }\n            data-testid=\"btn-ranking\"\n          >\n            Ranking\n          </button>\n          <button\n            // Requisito 15\n            className=\"p-2 w-full rounded-lg bg-violet-700 text-violet-200 font-bold\n            hover:bg-violet-600\"\n            type=\"button\"\n            onClick={ () => history.push('/') }\n            data-testid=\"btn-play-again\"\n          >\n            Play Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  assertions: state.player.assertions,\n  score: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n\nFeedback.propTypes = {\n  // dispatch: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n};\n","import md5 from 'crypto-js/md5';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import Header from '../components/Header';\n\nclass Ranking extends Component {\n  state = {\n    ranking: [],\n  }\n\n  componentDidMount() {\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\n    this.setState({ ranking });\n  }\n\n  hashEmail = (email) => md5(email).toString();\n\n  render() {\n    const { history } = this.props;\n    const { ranking } = this.state;\n    return (\n      <div className=\"flex flex-col justify-center items-center p-10\">\n        <h1\n          className=\"text-4xl font-bold mb-10 text-violet-100\"\n          data-testid=\"ranking-title\"\n        >\n          Ranking\n        </h1>\n        <div\n          className=\"flex flex-col bg-violet-100 max-w-2xl p-10\n          rounded-lg gap-5 shadow-lg mb-10\"\n        >\n          {\n            ranking && ranking.sort((a, b) => b.score - a.score).map((rank, index) => (\n              <div\n                className=\"bg-[#07DBAC] rounded-lg p-5 flex items-center gap-5\n                shadow-lg max-w-sm\"\n                key={ index }\n              >\n                <img\n                  className=\"rounded-md\"\n                  src={ `https://www.gravatar.com/avatar/${this.hashEmail(rank.picture)}` }\n                  width={ 50 }\n                  alt=\"profile\"\n                  data-testid=\"header-profile-picture\"\n                />\n                <span\n                  className=\"flex flex-col\"\n                >\n                  <p\n                    className=\"font-medium\"\n                    data-testid={ `player-name-${index}` }\n                  >\n                    {rank.name}\n                  </p>\n                  <p\n                    className=\"italic\"\n                    data-testid={ `player-score-${index}` }\n                  >\n                    {`Score: ${rank.score}`}\n                  </p>\n                </span>\n              </div>\n            ))\n          }\n        </div>\n        <button\n          // Requisito 16\n          className=\"p-2 py-3 w-full rounded-lg bg-[#07DBAC] text-violet-900 font-bold\n          text-lg hover:bg-teal-500 max-w-md\"\n          type=\"button\"\n          data-testid=\"btn-go-home\"\n          onClick={ () => history.push('/') }\n        >\n          Home\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n\nRanking.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n","import React, { Component } from 'react';\n\nclass Config extends Component {\n  render() {\n    return (\n      <h1 data-testid=\"settings-title\">Configurações</h1>\n    );\n  }\n}\n\nexport default Config;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Game from './pages/Game';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\nimport Config from './pages/Config';\n// import logo from './trivia.png';\n\nexport default function App() {\n  return (\n    <div className=\"bg-violet-800 min-h-screen\">\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/game\" component={ Game } />\n        <Route exact path=\"/feedback\" component={ Feedback } />\n        <Route exact path=\"/ranking\" component={ Ranking } />\n        <Route exact path=\"/config\" component={ Config } />\n      </Switch>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}